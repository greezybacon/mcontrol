
/**
 ** Automatically generated file -- do not modify directly
 **
 ** This file is generated by client.h.py which will compile the list of
 ** exported proxy functions from the given header files.
 **
 **/

#include <stdbool.h>
#include <stdlib.h>

#include "../drivers/driver.h"
#include "../motor.h"
#include "message.h"

extern void mcClientTimeoutSet(const struct timespec *, struct timespec *);

#include "query.h"
#include "locks.h"
#include "motor.h"
#include "motion.h"
#include "events.h"
#include "profile.h"
#include "trace.h"
#include "firmware.h"

extern int mcConnect( String * connection, OUT MOTOR motor_t * motor);

struct _mcConnect_args {
    int returned;
    String  connection;
    MOTOR motor_t  motor;
};

extern int mcEventRegister(motor_t motor, int event);

struct _mcEventRegister_args {
    int returned;
    int event;
};

extern int mcEventUnregister(motor_t motor, int event);

struct _mcEventUnregister_args {
    int returned;
    int event;
};

extern int mcFirmwareLoad(motor_t motor, String * filename);

struct _mcFirmwareLoad_args {
    int returned;
    String  filename;
};

extern int mcHome(motor_t motor);

struct _mcHome_args {
    int returned;
    
};

extern int mcJitter(motor_t motor, int loops, int max_travel);

struct _mcJitter_args {
    int returned;
    int loops;
    int max_travel;
};

extern int mcJitterUnits(motor_t motor, int loops, int max_travel, unit_type_t units);

struct _mcJitterUnits_args {
    int returned;
    int loops;
    int max_travel;
    unit_type_t units;
};

extern int mcMicrocodeLoad(motor_t motor, String * filename);

struct _mcMicrocodeLoad_args {
    int returned;
    String  filename;
};

extern bool mcMotorIsLocked(motor_t motor);

struct _mcMotorIsLocked_args {
    bool returned;
    
};

extern int mcMotorLock(motor_t motor, int for_motor_id, lock_mode_t mode);

struct _mcMotorLock_args {
    int returned;
    int for_motor_id;
    lock_mode_t mode;
};

extern int mcMotorUnlock(motor_t motor, int for_motor_id);

struct _mcMotorUnlock_args {
    int returned;
    int for_motor_id;
};

extern int mcMoveAbsolute(motor_t motor, int distance);

struct _mcMoveAbsolute_args {
    int returned;
    int distance;
};

extern int mcMoveAbsoluteUnits(motor_t motor, int distance, unit_type_t units);

struct _mcMoveAbsoluteUnits_args {
    int returned;
    int distance;
    unit_type_t units;
};

extern int mcMoveRelative(motor_t motor, int distance);

struct _mcMoveRelative_args {
    int returned;
    int distance;
};

extern int mcMoveRelativeUnits(motor_t motor, int distance, unit_type_t units);

struct _mcMoveRelativeUnits_args {
    int returned;
    int distance;
    unit_type_t units;
};

extern int mcPokeInteger(motor_t motor, motor_query_t query, int value);

struct _mcPokeInteger_args {
    int returned;
    motor_query_t query;
    int value;
};

extern int mcPokeString(motor_t motor, motor_query_t query, String * value);

struct _mcPokeString_args {
    int returned;
    motor_query_t query;
    String  value;
};

extern int mcPokeStringItem(motor_t motor, motor_query_t query, String * value, String * item);

struct _mcPokeStringItem_args {
    int returned;
    motor_query_t query;
    String  value;
    String  item;
};

extern int mcProfileGet(motor_t motor, OUT Profile * profile);

struct _mcProfileGet_args {
    int returned;
    Profile  profile;
};

extern int mcProfileGetAccel(motor_t motor, Profile * profile, unit_type_t units,
    OUT int * value);

struct _mcProfileGetAccel_args {
    int returned;
    Profile  profile;
    unit_type_t units;
    int  value;
};

extern int mcProfileGetDeadband(motor_t motor, Profile * profile, unit_type_t units,
    OUT int * value);

struct _mcProfileGetDeadband_args {
    int returned;
    Profile  profile;
    unit_type_t units;
    int  value;
};

extern int mcProfileGetDecel(motor_t motor, Profile * profile, unit_type_t units,
    OUT int * value);

struct _mcProfileGetDecel_args {
    int returned;
    Profile  profile;
    unit_type_t units;
    int  value;
};

extern int mcProfileGetInitialV(motor_t motor, Profile * profile, unit_type_t units,
    OUT int * value);

struct _mcProfileGetInitialV_args {
    int returned;
    Profile  profile;
    unit_type_t units;
    int  value;
};

extern int mcProfileGetMaxSlip(motor_t motor, Profile * profile, unit_type_t units,
    OUT int * value);

struct _mcProfileGetMaxSlip_args {
    int returned;
    Profile  profile;
    unit_type_t units;
    int  value;
};

extern int mcProfileGetMaxV(motor_t motor, Profile * profile, unit_type_t units,
    OUT int * value);

struct _mcProfileGetMaxV_args {
    int returned;
    Profile  profile;
    unit_type_t units;
    int  value;
};

extern int mcProfileSet(motor_t motor, Profile * profile);

struct _mcProfileSet_args {
    int returned;
    Profile  profile;
};

extern int mcQueryInteger(motor_t motor, motor_query_t query, OUT int * value);

struct _mcQueryInteger_args {
    int returned;
    motor_query_t query;
    int  value;
};

extern int mcQueryIntegerUnits(motor_t motor, motor_query_t query, OUT int * value, unit_type_t units);

struct _mcQueryIntegerUnits_args {
    int returned;
    motor_query_t query;
    int  value;
    unit_type_t units;
};

extern int mcQueryString(motor_t motor, motor_query_t query, OUT String * value);

struct _mcQueryString_args {
    int returned;
    motor_query_t query;
    String  value;
};

extern int mcSearch(motor_t motor, String * driver, OUT String * results);

struct _mcSearch_args {
    int returned;
    String  driver;
    String  results;
};

extern int mcStop(motor_t motor);

struct _mcStop_args {
    int returned;
    
};

extern int mcTraceSubscribeAdd(motor_t motor, int id, String * name);

struct _mcTraceSubscribeAdd_args {
    int returned;
    int id;
    String  name;
};

extern int mcTraceSubscribeRemote(motor_t motor, int level, long long mask);

struct _mcTraceSubscribeRemote_args {
    int returned;
    int level;
    long long mask;
};

extern int mcTraceSubscribeRemove(motor_t motor, int id, String * name);

struct _mcTraceSubscribeRemove_args {
    int returned;
    int id;
    String  name;
};

extern int mcTraceUnsubscribeRemote(motor_t motor, int id);

struct _mcTraceUnsubscribeRemote_args {
    int returned;
    int id;
};

extern int mcUnitScaleGet(motor_t motor, OUT unit_type_t * units, OUT long long * urevs);

struct _mcUnitScaleGet_args {
    int returned;
    unit_type_t  units;
    long long  urevs;
};

extern int mcUnitScaleSet(motor_t motor, unit_type_t units, long long urevs);

struct _mcUnitScaleSet_args {
    int returned;
    unit_type_t units;
    long long urevs;
};

extern int mcUnitToMicroRevs(motor_t motor, unit_type_t unit, OUT long long * urevs);

struct _mcUnitToMicroRevs_args {
    int returned;
    unit_type_t unit;
    long long  urevs;
};
