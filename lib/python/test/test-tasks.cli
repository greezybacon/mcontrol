create cotask

    task consumer fork consumer
    task producer fork producer
    task consumer start
    task producer start
    task consumer join

    succeed

    label producer
        let i = 1
        while True; do
            task consumer send i
            let i = i + 1
        done

    label consumer
        for x in range(20); do
            let j = [yield]
            print "Got {j}"
        done
        succeed

save

create cotask2

    task consumer fork consumer
    task producer fork producer
    task consumer start
    task producer start

    for x in range(30)
        task consumer send [task producer send]

    succeed

    label producer
        let i = 1
        while True; do
            yield i
            let i = i + i
        done

    label consumer
        while True; do
            print "Got [yield]"
            wait 0.01
        done
save

create parallel-tasks

    label main
        task task1 fork task1
        task task2 fork task2

        task task1 start
        task task2 start

        task task1 join
        task task2 join

        succeed

    label task1
        for x in range(10); do
            wait 0.08
            print "Task1: {x}"
        done

        succeed

    label task2
        for x in range(20); do
            wait 0.03
            print "Task2: {x}"
        done

        succeed

save

run cotask
run cotask2
run parallel-tasks
